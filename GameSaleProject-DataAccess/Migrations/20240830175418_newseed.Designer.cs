// <auto-generated />
using System;
using GameSaleProject_DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GameSaleProject_DataAccess.Migrations
{
    [DbContext(typeof(GameSaleProjectDbContext))]
    [Migration("20240830175418_newseed")]
    partial class newseed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(2992),
                            Description = "Action games",
                            IsDeleted = false,
                            Name = "Action"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3002),
                            Description = "Adventure games",
                            IsDeleted = false,
                            Name = "Adventure"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3002),
                            Description = "Role-playing games",
                            IsDeleted = false,
                            Name = "RPG"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3003),
                            Description = "Strategy games",
                            IsDeleted = false,
                            Name = "Strategy"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3004),
                            Description = "Simulation games",
                            IsDeleted = false,
                            Name = "Simulation"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3005),
                            Description = "High-speed racing games",
                            IsDeleted = false,
                            Name = "Racing"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3006),
                            Description = "Survival games",
                            IsDeleted = false,
                            Name = "Survival"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3007),
                            Description = "Puzzle-solving games",
                            IsDeleted = false,
                            Name = "Puzzle"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3008),
                            Description = "First-person and third-person shooters",
                            IsDeleted = false,
                            Name = "Shooter"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3039),
                            Description = "Sports games",
                            IsDeleted = false,
                            Name = "Sports"
                        });
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Developer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Platform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PublisherId");

                    b.ToTable("Games");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2015, 5, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An open-world RPG game",
                            Developer = "CD Projekt Red",
                            Discount = 0,
                            GameName = "The Witcher 3: Wild Hunt",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 39.99m,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2013, 9, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An action-adventure game",
                            Developer = "Rockstar North",
                            Discount = 20,
                            GameName = "Grand Theft Auto V",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 29.99m,
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2020, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A futuristic RPG game",
                            Developer = "CD Projekt Red",
                            Discount = 10,
                            GameName = "Cyberpunk 2077",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 59.99m,
                            PublisherId = 1
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2018, 10, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An open-world adventure game",
                            Developer = "Rockstar Studios",
                            Discount = 0,
                            GameName = "Red Dead Redemption 2",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 49.99m,
                            PublisherId = 2
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2016, 10, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A strategy game",
                            Developer = "Firaxis Games",
                            Discount = 0,
                            GameName = "Civilization VI",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 39.99m,
                            PublisherId = 3
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2014, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A life simulation game",
                            Developer = "Maxis",
                            Discount = 0,
                            GameName = "The Sims 4",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 49.99m,
                            PublisherId = 4
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2016, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An action RPG game",
                            Developer = "FromSoftware",
                            Discount = 0,
                            GameName = "Dark Souls III",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 59.99m,
                            PublisherId = 5
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2011, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A sandbox game",
                            Developer = "Mojang",
                            Discount = 0,
                            GameName = "Minecraft",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 26.95m,
                            PublisherId = 6
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2017, 7, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A battle royale game",
                            Developer = "Epic Games",
                            Discount = 0,
                            GameName = "Fortnite",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 0m,
                            PublisherId = 7
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2018, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An action-adventure game",
                            Developer = "Santa Monica Studio",
                            Discount = 0,
                            GameName = "God of War",
                            IsDeleted = false,
                            Platform = "PS4",
                            Price = 49.99m,
                            PublisherId = 8
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2017, 3, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "An open-world adventure game",
                            Developer = "Nintendo",
                            Discount = 0,
                            GameName = "The Legend of Zelda: Breath of the Wild",
                            IsDeleted = false,
                            Platform = "Switch",
                            Price = 59.99m,
                            PublisherId = 9
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A Viking-themed action RPG",
                            Developer = "Ubisoft Montreal",
                            Discount = 10,
                            GameName = "Assassin's Creed Valhalla",
                            IsDeleted = false,
                            Platform = "PC, PS4, Xbox One",
                            Price = 59.99m,
                            PublisherId = 10
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2019, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A first-person shooter",
                            Developer = "Infinity Ward",
                            Discount = 20,
                            GameName = "Call of Duty: Modern Warfare",
                            IsDeleted = false,
                            Platform = "PC, PS4, Xbox One",
                            Price = 59.99m,
                            PublisherId = 11
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2020, 3, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A fast-paced first-person shooter",
                            Developer = "id Software",
                            Discount = 15,
                            GameName = "DOOM Eternal",
                            IsDeleted = false,
                            Platform = "PC, PS4, Xbox One",
                            Price = 49.99m,
                            PublisherId = 12
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2020, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A reimagining of the classic RPG",
                            Developer = "Square Enix",
                            Discount = 10,
                            GameName = "Final Fantasy VII Remake",
                            IsDeleted = false,
                            Platform = "PS4",
                            Price = 59.99m,
                            PublisherId = 13
                        },
                        new
                        {
                            Id = 16,
                            CategoryId = 9,
                            CreatedDate = new DateTime(2021, 12, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A sci-fi first-person shooter",
                            Developer = "343 Industries",
                            Discount = 5,
                            GameName = "Halo Infinite",
                            IsDeleted = false,
                            Platform = "PC, Xbox Series X/S",
                            Price = 59.99m,
                            PublisherId = 14
                        },
                        new
                        {
                            Id = 17,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2020, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A VR action-adventure game",
                            Developer = "Valve",
                            Discount = 20,
                            GameName = "Half-Life: Alyx",
                            IsDeleted = false,
                            Platform = "PC",
                            Price = 59.99m,
                            PublisherId = 15
                        },
                        new
                        {
                            Id = 18,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2020, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A turn-based RPG",
                            Developer = "Ryu Ga Gotoku Studio",
                            Discount = 10,
                            GameName = "Yakuza: Like a Dragon",
                            IsDeleted = false,
                            Platform = "PC, PS4, Xbox One",
                            Price = 59.99m,
                            PublisherId = 16
                        },
                        new
                        {
                            Id = 19,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2019, 4, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A fighting game",
                            Developer = "NetherRealm Studios",
                            Discount = 10,
                            GameName = "Mortal Kombat 11",
                            IsDeleted = false,
                            Platform = "PC, PS4, Xbox One",
                            Price = 49.99m,
                            PublisherId = 17
                        },
                        new
                        {
                            Id = 20,
                            CategoryId = 7,
                            CreatedDate = new DateTime(2021, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "A survival horror game",
                            Developer = "Capcom",
                            Discount = 15,
                            GameName = "Resident Evil Village",
                            IsDeleted = false,
                            Platform = "PC, PS5, Xbox Series X/S",
                            Price = 59.99m,
                            PublisherId = 18
                        });
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.GameSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDiscountApplied")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFullyRefunded")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("TotalQuantity")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("GameSales");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.GameSaleDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<int>("GameSaleId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRefunded")
                        .HasColumnType("bit");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("GameSaleId");

                    b.ToTable("GameSaleDetails");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("ImageType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3257),
                            IsDeleted = false,
                            Name = "CD Projekt"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3258),
                            IsDeleted = false,
                            Name = "Rockstar Games"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3259),
                            IsDeleted = false,
                            Name = "2K Games"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3260),
                            IsDeleted = false,
                            Name = "Electronic Arts"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3260),
                            IsDeleted = false,
                            Name = "Bandai Namco Entertainment"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3261),
                            IsDeleted = false,
                            Name = "Mojang"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3262),
                            IsDeleted = false,
                            Name = "Epic Games"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3262),
                            IsDeleted = false,
                            Name = "Sony Interactive Entertainment"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3263),
                            IsDeleted = false,
                            Name = "Nintendo"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3264),
                            IsDeleted = false,
                            Name = "Ubisoft"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3264),
                            IsDeleted = false,
                            Name = "Activision"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3265),
                            IsDeleted = false,
                            Name = "Bethesda Softworks"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3266),
                            IsDeleted = false,
                            Name = "Square Enix"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3266),
                            IsDeleted = false,
                            Name = "Microsoft Studios"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3268),
                            IsDeleted = false,
                            Name = "Valve"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3268),
                            IsDeleted = false,
                            Name = "SEGA"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3269),
                            IsDeleted = false,
                            Name = "Warner Bros. Interactive Entertainment"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3270),
                            IsDeleted = false,
                            Name = "Capcom"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3270),
                            IsDeleted = false,
                            Name = "Blizzard Entertainment"
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3271),
                            IsDeleted = false,
                            Name = "Take-Two Interactive"
                        });
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerReview")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GameId");

                    b.HasIndex("UserId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.SystemRequirement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GameId")
                        .HasColumnType("int");

                    b.Property<string>("Graphics")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("OS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Storage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemMemory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemProcessor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameId")
                        .IsUnique();

                    b.ToTable("SystemRequirements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3303),
                            GameId = 2,
                            Graphics = "NVIDIA GTX 660 2GB",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "72 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel Core i5-3470"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3307),
                            GameId = 3,
                            Graphics = "NVIDIA GTX 1060 6GB",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "70 GB",
                            SystemMemory = "12 GB",
                            SystemProcessor = "Intel Core i7-4790"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3308),
                            GameId = 4,
                            Graphics = "NVIDIA GTX 770 2GB",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "150 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel Core i5-2500K"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3309),
                            GameId = 5,
                            Graphics = "Intel HD Graphics 4000",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "12 GB",
                            SystemMemory = "4 GB",
                            SystemProcessor = "Intel Core i3-3225"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3310),
                            GameId = 6,
                            Graphics = "AMD Radeon HD 6870",
                            IsDeleted = false,
                            OS = "Windows 7",
                            Storage = "8 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel Core i5-2500"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3312),
                            GameId = 7,
                            Graphics = "Intel HD Graphics 4000",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "1 GB",
                            SystemMemory = "4 GB",
                            SystemProcessor = "Intel Core i3-3210"
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3313),
                            GameId = 8,
                            Graphics = "Intel HD Graphics 620",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "20 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel Core i5-7300U"
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3314),
                            GameId = 9,
                            Graphics = "Intel HD Graphics 3000",
                            IsDeleted = false,
                            OS = "Windows 7",
                            Storage = "500 MB",
                            SystemMemory = "2 GB",
                            SystemProcessor = "Intel Core i3-2100"
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3315),
                            GameId = 10,
                            Graphics = "NVIDIA GTX 1080 8GB",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "100 GB",
                            SystemMemory = "16 GB",
                            SystemProcessor = "Intel Core i7-6700K"
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3316),
                            GameId = 11,
                            Graphics = "NVIDIA GTX 1050 Ti",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "50 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel i5-9600K"
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3317),
                            GameId = 12,
                            Graphics = "NVIDIA GTX 1660 Super",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "60 GB",
                            SystemMemory = "16 GB",
                            SystemProcessor = "AMD Ryzen 5 3600"
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3318),
                            GameId = 13,
                            Graphics = "NVIDIA RTX 2060",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "40 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel i7-10700K"
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3319),
                            GameId = 14,
                            Graphics = "NVIDIA GTX 1060",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "30 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "AMD Ryzen 3 3300X"
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3321),
                            GameId = 15,
                            Graphics = "NVIDIA GTX 1050 Ti",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "25 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel i5-10400F"
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3322),
                            GameId = 16,
                            Graphics = "NVIDIA RTX 2070 Super",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "80 GB",
                            SystemMemory = "16 GB",
                            SystemProcessor = "Intel i7-9700K"
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3323),
                            GameId = 17,
                            Graphics = "NVIDIA GTX 1650",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "45 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "AMD Ryzen 5 2600"
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3324),
                            GameId = 18,
                            Graphics = "NVIDIA GTX 1050",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "35 GB",
                            SystemMemory = "8 GB",
                            SystemProcessor = "Intel i5-9400F"
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3349),
                            GameId = 19,
                            Graphics = "Intel UHD Graphics 630",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "20 GB",
                            SystemMemory = "4 GB",
                            SystemProcessor = "Intel i3-8100"
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2024, 8, 30, 20, 54, 17, 427, DateTimeKind.Local).AddTicks(3351),
                            GameId = 20,
                            Graphics = "NVIDIA RTX 2060 Super",
                            IsDeleted = false,
                            OS = "Windows 10",
                            Storage = "50 GB",
                            SystemMemory = "16 GB",
                            SystemProcessor = "AMD Ryzen 5 3600X"
                        });
                });

            modelBuilder.Entity("GameSaleProject_Entity.Identity.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("GameSaleProject_Entity.Identity.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasDefaultValue("/images/DefaultPfp.jpg");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Game", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Entities.Category", "Category")
                        .WithMany("Games")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameSaleProject_Entity.Entities.Publisher", "Publisher")
                        .WithMany("Games")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.GameSale", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", "User")
                        .WithMany("GameSales")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.GameSaleDetail", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Entities.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameSaleProject_Entity.Entities.GameSale", "GameSale")
                        .WithMany("GameSaleDetails")
                        .HasForeignKey("GameSaleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("GameSale");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Image", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Entities.Game", "Game")
                        .WithMany("Images")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Publisher", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Review", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Entities.Game", "Game")
                        .WithMany("Reviews")
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.SystemRequirement", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Entities.Game", "Game")
                        .WithOne("SystemRequirement")
                        .HasForeignKey("GameSaleProject_Entity.Entities.SystemRequirement", "GameId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("GameSaleProject_Entity.Identity.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Category", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Game", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("Reviews");

                    b.Navigation("SystemRequirement")
                        .IsRequired();
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.GameSale", b =>
                {
                    b.Navigation("GameSaleDetails");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Entities.Publisher", b =>
                {
                    b.Navigation("Games");
                });

            modelBuilder.Entity("GameSaleProject_Entity.Identity.AppUser", b =>
                {
                    b.Navigation("GameSales");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
