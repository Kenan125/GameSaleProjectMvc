@using GameSaleProject_Entity.ViewModels
@model GameViewModel
@{
    ViewData["Title"] = "AddGame";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<form asp-action="AddGame" method="post" enctype="multipart/form-data">
    <div class="form-group">
        <label asp-for="GameName"></label>
        <input asp-for="GameName" class="form-control" />
        <span asp-validation-for="GameName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Discount"></label>
        <input asp-for="Discount" class="form-control" />
        <span asp-validation-for="Discount" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Developer"></label>
        <input asp-for="Developer" class="form-control" />
        <span asp-validation-for="Developer" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="PublisherId"></label>
        <input asp-for="PublisherId" class="form-control" />
        <span asp-validation-for="PublisherId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="CategoryId"></label>
        <input asp-for="CategoryId" class="form-control" />
        <span asp-validation-for="CategoryId" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Platform"></label>
        <input asp-for="Platform" class="form-control" />
        <span asp-validation-for="Platform" class="text-danger"></span>
    </div>

    <!-- File input for the card image with preview -->
    <div class="form-group">
        <label>Card Image</label>
        <input type="file" name="CardImage" class="form-control" id="cardImageInput" />
        <div id="cardImagePreview" class="mt-3"></div>
    </div>

    <!-- File input for the display images with preview and delete option -->
    <div class="form-group">
        <label>Display Images</label>
        <input type="file" name="DisplayImages" multiple class="form-control" id="displayImagesInput" />
        <div id="displayImagesPreview" class="mt-3"></div>
    </div>

    <button type="submit" class="btn btn-primary">Add Game</button>
</form>

<!-- JavaScript to handle image preview and deletion -->
@section Scripts {
    <script>
        // Preview and manage Card Image
        const cardImageInput = document.getElementById('cardImageInput');
        const cardImagePreview = document.getElementById('cardImagePreview');

        cardImageInput.addEventListener('change', function (event) {
            const file = event.target.files[0];

            if (file) {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    cardImagePreview.innerHTML = `
                                <img src="${e.target.result}" alt="Card Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
                                <button type="button" class="btn btn-danger btn-sm mt-1 remove-card-image-btn">Remove</button>
                            `;
                };

                fileReader.readAsDataURL(file);
            }
        });

        cardImagePreview.addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-card-image-btn')) {
                cardImageInput.value = ''; // Clear the file input
                cardImagePreview.innerHTML = ''; // Clear the preview
            }
        });

        // Preview and manage Display Images
        const displayImagesInput = document.getElementById('displayImagesInput');
        const previewContainer = document.getElementById('displayImagesPreview');

        let selectedFiles = [];

        displayImagesInput.addEventListener('change', function (event) {
            const files = Array.from(event.target.files);

            selectedFiles = selectedFiles.concat(files);
            updateFileInput();

            previewContainer.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    const imagePreview = document.createElement('div');
                    imagePreview.classList.add('image-preview');
                    imagePreview.innerHTML = `
                                <img src="${e.target.result}" alt="Selected Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
                                <button type="button" class="btn btn-danger btn-sm mt-1 remove-image-btn" data-index="${index}">Remove</button>
                            `;
                    previewContainer.appendChild(imagePreview);
                };

                fileReader.readAsDataURL(file);
            });
        });

        previewContainer.addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-image-btn')) {
                const index = parseInt(event.target.getAttribute('data-index'));

                selectedFiles.splice(index, 1);

                updateFileInput();
                updatePreview();
            }
        });

        function updateFileInput() {
            const dataTransfer = new DataTransfer();

            selectedFiles.forEach(file => {
                dataTransfer.items.add(file);
            });

            displayImagesInput.files = dataTransfer.files;
        }

        function updatePreview() {
            previewContainer.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    const imagePreview = document.createElement('div');
                    imagePreview.classList.add('image-preview');
                    imagePreview.innerHTML = `
                                <img src="${e.target.result}" alt="Selected Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
                                <button type="button" class="btn btn-danger btn-sm mt-1 remove-image-btn" data-index="${index}">Remove</button>
                            `;
                    previewContainer.appendChild(imagePreview);
                };

                fileReader.readAsDataURL(file);
            });
        }
    </script>
}

<!-- Optional CSS to style the preview and buttons -->
<style>
    .image-preview {
        display: inline-block;
        margin-right: 10px;
        margin-bottom: 10px;
        position: relative;
    }

    .remove-image-btn,
    .remove-card-image-btn {
        position: absolute;
        top: 5px;
        right: 5px;
    }
</style>
