@using GameSaleProject_Entity.ViewModels
@model GameViewModel
@{
    ViewData["Title"] = "AddGame";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Sidebar {
    @if (User.IsInRole("Admin"))
    {
        @await Html.PartialAsync("~/Areas/Admin/Views/Shared/Components/_Sidebar.cshtml")
    }
    else if (User.IsInRole("Publisher"))
    {
        @await Html.PartialAsync("~/Areas/Publisher/Views/Shared/Components/_Sidebar.cshtml")
    }
    else
    {
        @await Html.PartialAsync("~/Views/Shared/Components/SideBar/_Sidebar.cshtml")
    }
}
<style>
    .form-container {
        display: flex;
        justify-content: center; /* Center the entire form in the middle */
        align-items: flex-start; /* Align items at the top */
        gap: 10px; /* Small space between main form and the side section */
    }

    .main-form, .system-requirements {
        box-sizing: border-box; /* Ensure padding doesn't affect the width */
    }

    .main-form {
        width: 50%; /* Main form occupies half of the container */
        max-width: 400px; /* Prevents it from becoming too wide */
        border: 1px solid white;
        padding: 1em; /* Padding for internal spacing */
        border-radius: 0.5em;
    }

    .system-requirements {
        width: 45%; /* Side section takes slightly less space */
        max-width: 350px; /* Restrict the maximum width */
        border: 1px solid white; /* White border for visual separation */
        padding: 1em; /* Padding for internal spacing */
        border-radius: 0.5em;
    }

    .image-preview {
        display: inline-block;
        margin-right: 10px;
        margin-bottom: 10px;
        position: relative;
    }

        .image-preview img {
            max-width: 100px;
            max-height: 100px;
        }

    .remove-image-btn,
    .remove-card-image-btn {
        position: absolute;
        top: 5px;
        right: 5px;
    }
</style>

<div class="form-container">
    <form class="main-form" asp-action="AddGame" method="post" enctype="multipart/form-data">
        <div class="form-group text-white">
            <label asp-for="GameName"></label>
            <input asp-for="GameName" class="form-control" />
            <span asp-validation-for="GameName" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="Description"></label>
            <input asp-for="Description" class="form-control" />
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="Discount"></label>
            <input asp-for="Discount" class="form-control" type="text" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');" />
            <span asp-validation-for="Discount" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="Price"></label>
            <input asp-for="Price" class="form-control" type="text" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');" />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="Developer"></label>
            <input asp-for="Developer" class="form-control" />
            <span asp-validation-for="Developer" class="text-danger"></span>
        </div>

        @if (User.IsInRole("Admin"))
        {
            <div class="form-group text-white">
                <label asp-for="PublisherId">Publisher</label>
                <select asp-for="PublisherId" asp-items="@(ViewBag.Publishers != null ? new SelectList(ViewBag.Publishers, "Id", "Name") : new SelectList(Enumerable.Empty<SelectListItem>()))" class="form-control">
                    <option value="">Select Publisher</option>
                </select>
                <span asp-validation-for="PublisherId" class="text-danger"></span>
            </div>
        }
        else if (User.IsInRole("Publisher"))
        {
            <input type="hidden" asp-for="PublisherId" />
        }

        <div class="form-group text-white">
            <label asp-for="CategoryId">Category</label>
            <select asp-for="CategoryId" asp-items="@(ViewBag.Categories != null ? new SelectList(ViewBag.Categories, "Id", "Name") : new SelectList(Enumerable.Empty<SelectListItem>()))" class="form-control">
                <option value="">Select Category</option>
            </select>
            <span asp-validation-for="CategoryId" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="Platform"></label>
            <input asp-for="Platform" class="form-control" />
            <span asp-validation-for="Platform" class="text-danger"></span>
        </div>

        <!-- File input for the display images with preview and delete option -->
        <div class="form-group text-white">
            <label>Display Images</label>
            <input type="file" name="DisplayImages" multiple class="form-control" id="displayImagesInput" />
            <div id="displayImagesPreview" class="mt-3"></div>
        </div>
        <div class="system-requirements text-white">
            <!-- File input for the card image with preview -->
            <div class="form-group">
                <label>Card Image</label>
                <input type="file" name="CardImage" class="form-control" id="cardImageInput" />
                <div id="cardImagePreview" class="mt-3"></div>
            </div>

            <h4>System Requirements</h4>
            <div class="form-group">
                <label asp-for="SystemRequirement.SystemProcessor"></label>
                <input asp-for="SystemRequirement.SystemProcessor" class="form-control" />
                <span asp-validation-for="SystemRequirement.SystemProcessor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SystemRequirement.SystemMemory"></label>
                <input asp-for="SystemRequirement.SystemMemory" class="form-control" />
                <span asp-validation-for="SystemRequirement.SystemMemory" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SystemRequirement.Storage"></label>
                <input asp-for="SystemRequirement.Storage" class="form-control" />
                <span asp-validation-for="SystemRequirement.Storage" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SystemRequirement.Graphics"></label>
                <input asp-for="SystemRequirement.Graphics" class="form-control" />
                <span asp-validation-for="SystemRequirement.Graphics" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="SystemRequirement.OS"></label>
                <input asp-for="SystemRequirement.OS" class="form-control" />
                <span asp-validation-for="SystemRequirement.OS" class="text-danger"></span>
            </div>
        </div>
        <button type="submit" class="btn btn-primary">Add Game</button>
    </form>

    <!-- System Requirements Form -->
    
</div>

@section Scripts {
    <script>
        // Preview and manage Card Image
        const cardImageInput = document.getElementById('cardImageInput');
        const cardImagePreview = document.getElementById('cardImagePreview');

        cardImageInput.addEventListener('change', function (event) {
            const file = event.target.files[0];

            if (file) {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    cardImagePreview.innerHTML = `
                                        <img src="${e.target.result}" alt="Card Image" class="img-thumbnail" style="max-width: 150px; max-height: 150px;">
                                        <button type="button" class="btn btn-danger btn-sm mt-1 remove-card-image-btn">Remove</button>
                                    `;
                };

                fileReader.readAsDataURL(file);
            }
        });

        cardImagePreview.addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-card-image-btn')) {
                cardImageInput.value = ''; // Clear the file input
                cardImagePreview.innerHTML = ''; // Clear the preview
            }
        });

        // Preview and manage Display Images
        const displayImagesInput = document.getElementById('displayImagesInput');
        const previewContainer = document.getElementById('displayImagesPreview');

        let selectedFiles = [];

        displayImagesInput.addEventListener('change', function (event) {
            const files = Array.from(event.target.files);

            selectedFiles = selectedFiles.concat(files);
            updateFileInput();

            previewContainer.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    const imagePreview = document.createElement('div');
                    imagePreview.classList.add('image-preview');
                    imagePreview.innerHTML = `
                                        <img src="${e.target.result}" alt="Selected Image" class="img-thumbnail">
                                        <button type="button" class="btn btn-danger btn-sm mt-1 remove-image-btn" data-index="${index}">Remove</button>
                                    `;
                    previewContainer.appendChild(imagePreview);
                };

                fileReader.readAsDataURL(file);
            });
        });

        previewContainer.addEventListener('click', function (event) {
            if (event.target.classList.contains('remove-image-btn')) {
                const index = parseInt(event.target.getAttribute('data-index'));

                selectedFiles.splice(index, 1);

                updateFileInput();
                updatePreview();
            }
        });

        function updateFileInput() {
            const dataTransfer = new DataTransfer();

            selectedFiles.forEach(file => {
                dataTransfer.items.add(file);
            });

            displayImagesInput.files = dataTransfer.files;
        }

        function updatePreview() {
            previewContainer.innerHTML = '';

            selectedFiles.forEach((file, index) => {
                const fileReader = new FileReader();

                fileReader.onload = function (e) {
                    const imagePreview = document.createElement('div');
                    imagePreview.classList.add('image-preview');
                    imagePreview.innerHTML = `
                                        <img src="${e.target.result}" alt="Selected Image" class="img-thumbnail">
                                        <button type="button" class="btn btn-danger btn-sm mt-1 remove-image-btn" data-index="${index}">Remove</button>
                                    `;
                    previewContainer.appendChild(imagePreview);
                };

                fileReader.readAsDataURL(file);
            });
        }
    </script>
}
