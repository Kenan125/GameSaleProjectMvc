@model GameViewModel
@{
    ViewData["Title"] = "UpdateGame";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Sidebar {
    @if (User.IsInRole("Admin"))
    {
        @await Html.PartialAsync("~/Areas/Admin/Views/Shared/Components/_Sidebar.cshtml")
    }
    else if (User.IsInRole("Publisher"))
    {
        @await Html.PartialAsync("~/Areas/Publisher/Views/Shared/Components/_Sidebar.cshtml")
    }
    else
    {
        @await Html.PartialAsync("~/Views/Shared/Components/SideBar/_Sidebar.cshtml")
    }
}
<form asp-action="UpdateGame" method="post" enctype="multipart/form-data" style="margin: 0 auto;
      width: 500px;
      padding: 1em;
      border: 1px solid #ccc;
      border-radius: 1em;">
    <input type="hidden" asp-for="Id" />
    <input type="hidden" name="returnUrl" value="@ViewBag.ReturnUrl" />
    @Html.HiddenFor(model => model.PublisherId)
    <div class="form-group text-white">
        <label asp-for="GameName"></label>
        <input asp-for="GameName" class="form-control" />
        <span asp-validation-for="GameName" class="text-danger"></span>
    </div>

    <div class="form-group text-white">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
        <span asp-validation-for="Description" class="text-danger"></span>
    </div>

    <div class="form-group text-white">
        <label asp-for="Developer"></label>
        <input asp-for="Developer" class="form-control" />
        <span asp-validation-for="Developer" class="text-danger"></span>
    </div>

    <div class="form-group text-white">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" type="text" oninput="this.value = this.value.replace(/[^0-9]/g,'').replace(/(\..*)\./g,'$1');" />
        <span asp-validation-for="Price" class="text-danger"></span>
    </div>

    <div class="form-group text-white">
        <label asp-for="Discount"></label>
        <input asp-for="Discount" class="form-control" type="text" oninput="this.value = this.value.replace(/[^0-9]/g, '').replace(/(\..*)\./g, '$1');" />
        <span asp-validation-for="Discount" class="text-danger"></span>
    </div>
    @if (User.IsInRole("Admin"))
    {
        <div class="form-group text-white">
            <label asp-for="Publisher"></label>
            <select asp-for="PublisherId" asp-items="@(new SelectList(ViewBag.Publishers, "Id", "Name"))" class="form-control">
                <option value="">Select Publisher</option>
            </select>
            <span asp-validation-for="PublisherId" class="text-danger"></span>
        </div>
    }
    


    <div class="form-group text-white">
        <label asp-for="Category"></label>
        <select asp-for="CategoryId" asp-items="@(new SelectList(ViewBag.Categories, "Id", "Name"))" class="form-control">
            <option value="">Select Category</option>
        </select>
        <span asp-validation-for="Category" class="text-danger"></span>
    </div>

    
    <div class="form-group text-white">
        <label asp-for="Platform"></label>
        <input asp-for="Platform" class="form-control" />
        <span asp-validation-for="Platform" class="text-danger"></span>
    </div>

    <div class="form-group text-white">
        <label>Current Card Image</label>
        <div>
            @if (Model.Images != null && Model.Images.Any(i => i.ImageType == "card"))
            {
                var cardImage = Model.Images.FirstOrDefault(i => i.ImageType == "card");
                if (cardImage != null)
                {
                    <div style="display:inline-block; position:relative; margin-right: 10px;">
                        <img src="@cardImage.ImageUrl" alt="@cardImage.Name" class="img-thumbnail" style="max-width: 150px; margin-right: 10px;" />
                        <button type="submit" formaction="@Url.Action("DeleteImage", new { imageId = cardImage.Id, gameId = Model.Id })" formmethod="post" class="btn btn-danger btn-sm" style="position:absolute; top:0; right:0;">X</button>
                    </div>
                }
                else
                {
                    <img src="/images/placeholder.png" alt="No Image Available" class="img-thumbnail" style="max-width: 150px; margin-right: 10px;" />
                }
            }
            else
            {
                <img src="/images/placeholder.png" alt="No Image Available" class="img-thumbnail" style="max-width: 150px; margin-right: 10px;" />
            }
        </div>
    </div>

    <!-- File input for new Card Image -->
    <div class="form-group text-white">
        <label>Upload New Card Image</label>
        <input type="file" name="CardImage" class="form-control" />
    </div>
    <!-- Section for Display Images -->
    <div class="form-group text-white">
        <label>Current Display Images</label>
        <div>
            @if (Model.Images != null && Model.Images.Any(i => i.ImageType == "display"))
            {
                foreach (var image in Model.Images.Where(i => i.ImageType == "display"))
                {
                    <div style="display:inline-block; position:relative; margin-right: 10px;">
                        <img src="@image.ImageUrl" alt="@image.Name" class="img-thumbnail" style="max-width: 100px; max-height: 100px;" />
                        <button type="submit" formaction="@Url.Action("DeleteImage", new { imageId = image.Id, gameId = Model.Id })" formmethod="post" class="btn btn-danger btn-sm" style="position:absolute; top:0; right:0;">X</button>
                    </div>
                }
            }
            else
            {
                <p>No display images available.</p>
            }
        </div>
    </div>

    <!-- File input for new Display Images -->
    <div class="form-group text-white">
        <label>Upload New Display Images</label>
        <input type="file" name="DisplayImages" multiple class="form-control" />
    </div>
    <div class="side-section">
        
        

        <h4 class="text-white">System Requirements</h4>
        <div class="form-group text-white">
            <label asp-for="SystemRequirement.SystemProcessor"></label>
            <input asp-for="SystemRequirement.SystemProcessor" class="form-control" />
            <span asp-validation-for="SystemRequirement.SystemProcessor" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="SystemRequirement.SystemMemory"></label>
            <input asp-for="SystemRequirement.SystemMemory" class="form-control" />
            <span asp-validation-for="SystemRequirement.SystemMemory" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="SystemRequirement.Storage"></label>
            <input asp-for="SystemRequirement.Storage" class="form-control" />
            <span asp-validation-for="SystemRequirement.Storage" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="SystemRequirement.Graphics"></label>
            <input asp-for="SystemRequirement.Graphics" class="form-control" />
            <span asp-validation-for="SystemRequirement.Graphics" class="text-danger"></span>
        </div>
        <div class="form-group text-white">
            <label asp-for="SystemRequirement.OS"></label>
            <input asp-for="SystemRequirement.OS" class="form-control" />
            <span asp-validation-for="SystemRequirement.OS" class="text-danger"></span>
        </div>
    </div>
    @if (User.IsInRole("Admin"))
    {
        <div class="form-group text-white">
            <label asp-for="IsDeleted"></label>
            <select asp-for="IsDeleted" class="form-control">
                <option value="false">No</option>
                <option value="true">Yes</option>
            </select>
            <span asp-validation-for="IsDeleted" class="text-danger"></span>
        </div>
    }
    
    <button type="submit" class="btn btn-primary">Update Game</button>
</form>
